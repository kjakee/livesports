<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Live Sports Tracker</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        :root {
            --primary: #1a1a2e;
            --secondary: #16213e;
            --accent: #e63946;
        }
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f8f9fa;
            color: #333;
            line-height: 1.6;
        }
        header {
            background-color: var(--primary);
            color: white;
            padding: 1.5rem;
            text-align: center;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1 {
            margin: 0;
            font-size: 2rem;
        }
        .container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 1rem;
        }
        .controls {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1.5rem;
            flex-wrap: wrap;
            gap: 1rem;
        }
        .sport-selector {
            display: flex;
            gap: 0.5rem;
        }
        .sport-btn {
            padding: 0.5rem 1rem;
            background: white;
            border: 1px solid #ddd;
            border-radius: 4px;
            cursor: pointer;
            transition: all 0.3s;
        }
        .sport-btn.active {
            background: var(--secondary);
            color: white;
            border-color: var(--secondary);
        }
        .search-box {
            padding: 0.5rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            min-width: 200px;
        }
        .matches-container {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 15px rgba(0,0,0,0.05);
            overflow: hidden;
        }
        .match {
            display: grid;
            grid-template-columns: 1fr auto 1fr;
            align-items: center;
            padding: 1rem;
            border-bottom: 1px solid #eee;
            gap: 1rem;
        }
        .match:last-child {
            border-bottom: none;
        }
        .team {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        .team.home {
            justify-content: flex-end;
            text-align: right;
        }
        .team-logo {
            width: 30px;
            height: 30px;
            object-fit: contain;
        }
        .score {
            font-weight: bold;
            font-size: 1.2rem;
            min-width: 60px;
            text-align: center;
        }
        .match-time {
            color: #666;
            font-size: 0.9rem;
            text-align: center;
            margin-top: 0.3rem;
        }
        .live-badge {
            background: var(--accent);
            color: white;
            padding: 0.2rem 0.5rem;
            border-radius: 4px;
            font-size: 0.8rem;
            font-weight: bold;
            display: inline-block;
            margin-left: 0.5rem;
        }
        .status {
            text-align: center;
            padding: 2rem;
            color: #666;
        }
        footer {
            text-align: center;
            padding: 1.5rem;
            background: var(--secondary);
            color: white;
            margin-top: 2rem;
        }
        @media (max-width: 600px) {
            .match {
                grid-template-columns: 1fr;
                text-align: center;
            }
            .team {
                justify-content: center !important;
                text-align: center !important;
            }
            .score {
                order: 1;
            }
        }
    </style>
</head>
<body>
    <header>
        <h1><i class="fas fa-running"></i> Live Sports Tracker</h1>
    </header>

    <div class="container">
        <div class="controls">
            <div class="sport-selector">
                <button class="sport-btn active" data-sport="soccer">Soccer</button>
                <button class="sport-btn" data-sport="basketball">Basketball</button>
                <button class="sport-btn" data-sport="baseball">Baseball</button>
                <button class="sport-btn" data-sport="hockey">Hockey</button>
            </div>
            <input type="text" class="search-box" placeholder="Search teams...">
        </div>

        <div class="matches-container">
            <div class="status">Loading matches...</div>
            <!-- Matches will be inserted here by JavaScript -->
        </div>
    </div>

    <footer>
        <p>&copy; 2023 Live Sports Tracker. Data provided by API-Sports.</p>
    </footer>

    <script>
        // Mock data - in a real app you would fetch from an API
        const sportsData = {
            soccer: [
                {
                    id: 1,
                    homeTeam: "Arsenal",
                    awayTeam: "Chelsea",
                    homeScore: 2,
                    awayScore: 1,
                    time: "75'",
                    status: "live",
                    homeLogo: "https://via.placeholder.com/30",
                    awayLogo: "https://via.placeholder.com/30"
                },
                {
                    id: 2,
                    homeTeam: "Liverpool",
                    awayTeam: "Man City",
                    homeScore: 0,
                    awayScore: 0,
                    time: "45'",
                    status: "live",
                    homeLogo: "https://via.placeholder.com/30",
                    awayLogo: "https://via.placeholder.com/30"
                },
                {
                    id: 3,
                    homeTeam: "Barcelona",
                    awayTeam: "Real Madrid",
                    homeScore: null,
                    awayScore: null,
                    time: "Tomorrow 20:00",
                    status: "upcoming",
                    homeLogo: "https://via.placeholder.com/30",
                    awayLogo: "https://via.placeholder.com/30"
                }
            ],
            basketball: [
                {
                    id: 101,
                    homeTeam: "Lakers",
                    awayTeam: "Warriors",
                    homeScore: 98,
                    awayScore: 102,
                    time: "Q4 8:32",
                    status: "live",
                    homeLogo: "https://via.placeholder.com/30",
                    awayLogo: "https://via.placeholder.com/30"
                }
            ]
        };

        // DOM elements
        const sportBtns = document.querySelectorAll('.sport-btn');
        const searchBox = document.querySelector('.search-box');
        const matchesContainer = document.querySelector('.matches-container');

        // Current sport
        let currentSport = 'soccer';

        // Initialize
        function init() {
            renderMatches(sportsData[currentSport]);
            setupEventListeners();
        }

        // Set up event listeners
        function setupEventListeners() {
            // Sport selector buttons
            sportBtns.forEach(btn => {
                btn.addEventListener('click', () => {
                    sportBtns.forEach(b => b.classList.remove('active'));
                    btn.classList.add('active');
                    currentSport = btn.dataset.sport;
                    renderMatches(sportsData[currentSport]);
                });
            });

            // Search box
            searchBox.addEventListener('input', (e) => {
                const searchTerm = e.target.value.toLowerCase();
                const filteredMatches = sportsData[currentSport].filter(match => 
                    match.homeTeam.toLowerCase().includes(searchTerm) || 
                    match.awayTeam.toLowerCase().includes(searchTerm)
                );
                renderMatches(filteredMatches);
            });
        }

        // Render matches
        function renderMatches(matches) {
            if (matches.length === 0) {
                matchesContainer.innerHTML = '<div class="status">No matches found</div>';
                return;
            }

            matchesContainer.innerHTML = '';

            matches.forEach(match => {
                const matchEl = document.createElement('div');
                matchEl.className = 'match';

                const homeTeam = document.createElement('div');
                homeTeam.className = 'team home';
                homeTeam.innerHTML = `
                    <span>${match.homeTeam}</span>
                    <img src="${match.homeLogo}" alt="${match.homeTeam}" class="team-logo">
                `;

                const score = document.createElement('div');
                score.className = 'score';
                if (match.homeScore !== null && match.awayScore !== null) {
                    score.textContent = `${match.homeScore} - ${match.awayScore}`;
                } else {
                    score.textContent = 'vs';
                }

                const awayTeam = document.createElement('div');
                awayTeam.className = 'team';
                awayTeam.innerHTML = `
                    <img src="${match.awayLogo}" alt="${match.awayTeam}" class="team-logo">
                    <span>${match.awayTeam}</span>
                `;

                const matchTime = document.createElement('div');
                matchTime.className = 'match-time';
                if (match.status === 'live') {
                    matchTime.innerHTML = `${match.time} <span class="live-badge">LIVE</span>`;
                } else {
                    matchTime.textContent = match.time;
                }

                matchEl.appendChild(homeTeam);
                matchEl.appendChild(score);
                matchEl.appendChild(awayTeam);
                matchEl.appendChild(matchTime);

                matchesContainer.appendChild(matchEl);
            });
        }

        // Initialize the app
        init();

        // In a real app, you would fetch from an API like this:
        /*
        async function fetchLiveMatches(sport) {
            try {
                const response = await fetch(`https://api.example.com/${sport}/matches`);
                const data = await response.json();
                renderMatches(data.matches);
            } catch (error) {
                console.error('Error fetching matches:', error);
                matchesContainer.innerHTML = '<div class="status">Error loading matches. Please try again later.</div>';
            }
        }
        */
    </script>
</body>
</html>